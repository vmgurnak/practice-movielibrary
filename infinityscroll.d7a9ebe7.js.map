{"mappings":"AACA,MAAMA,EAAW,CACfC,UAAWC,SAASC,cAAc,kBAClCC,MAAOF,SAASC,cAAc,cAI1BE,EAEG,kBAFHA,EAGE,aAHFA,EAIK,QAIX,IAAIC,EAAO,EAGX,MAKMC,EAAW,IAAIC,sBA+DrB,SAAyBC,EAASC,GAChCD,EAAQE,SAAQC,IACdC,QAAQC,IAAIF,GACRA,EAAMG,iBACRT,GAAQ,EACRU,EAAaV,GACVW,MAAKC,IACJlB,EAASC,UAAUkB,mBACjB,YACAC,EAAaF,EAAKG,UAEhBH,EAAKI,MAAQJ,EAAKK,aACpBb,EAASc,UAAUxB,EAASI,MAAM,IAGrCqB,OAAMC,IACLb,QAAQC,IAAIY,EAAI,I,MApFV,CACdC,KAAM,KACNC,WAAY,OACZC,UAAW,IAKb,SAAST,EAAaU,GACpB,OAAOA,EACJC,KACC,EAACC,YACCA,EAAWC,eACXA,EAAcC,aACdA,EAAYC,aACZA,KACI,+CAEDH,EACI,kCAAoCA,EACpC,0BACIC,GAAkB5B,2DAEnB4B,GAAkB5B,wCACL6B,GAAgB7B,uCAChB8B,GAAgB9B,wCAI1C+B,KAAK,G,CAIV,SAASpB,EAAaqB,EAAc,KAClC,MAAMC,EAAS,IAAIC,gBAAgB,CACjCjB,KAAMe,EACNG,QAAS,qCAEX,OAAOC,MAAM,oDAAoDH,KAC9DrB,MAAKyB,IACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAM,SAElB,OAAOF,EAAKG,MAAM,IAEnBpB,OAAMC,IACLb,QAAQC,IAAIY,EAAI,G,CAKtBV,IACGC,MAAKC,IACJL,QAAQC,IAAII,GACZlB,EAASC,UAAUkB,mBACjB,YACAC,EAAaF,EAAKG,UAGhBH,EAAKI,KAAOJ,EAAKK,aACnBhB,EAASuC,QAAQ9C,EAASI,MAAM,IAGnCqB,OAAMC,IACLb,QAAQC,IAAIY,EAAI","sources":["src/js/infinityscroll.js"],"sourcesContent":["// Elements object\nconst elements = {\n  container: document.querySelector('.js-movie-list'),\n  guard: document.querySelector('.js-guard'),\n};\n\n// Default markup values object\nconst defaults = {\n  poster: 'https://www.reelviews.net/resources/img/default_poster.jpg',\n  title: 'Title not found',\n  date: 'XXXX-XX-XX',\n  average: 'XX.XX',\n};\n\n// Variable for backend page number\nlet page = 1;\n\n// Intersection Observer\nconst options = {\n  root: null,\n  rootMargin: '50px',\n  threshold: 0,\n};\nconst observer = new IntersectionObserver(handlerLoadMore, options);\n\n// Markup function\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        poster_path,\n        original_title,\n        release_date,\n        vote_average,\n      }) => `<li class=\"movie-card\">\n         <img src=\"${\n           poster_path\n             ? 'https://image.tmdb.org/t/p/w300' + poster_path\n             : 'default.poster'\n         }\" alt=\"${original_title || defaults.title}\">\n         <div class=\"movie-info\">\n            <h2>${original_title || defaults.title}</h2>\n            <p>Release Date: ${release_date || defaults.date}</p>\n            <p>Vote Average: ${vote_average || defaults.average}</p>\n         </div>\n      </li>`\n    )\n    .join('');\n}\n\n// Function for backend request\nfunction serviceFilms(currentPage = '1') {\n  const params = new URLSearchParams({\n    page: currentPage,\n    api_key: '345007f9ab440e5b86cef51be6397df1',\n  });\n  return fetch(`https://api.themoviedb.org/3/trending/movie/week?${params}`)\n    .then(resp => {\n      if (!resp.ok) {\n        throw new Error('Error');\n      }\n      return resp.json();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n// Calling the serviceFilms() function, first loading, rendering markup\nserviceFilms()\n  .then(data => {\n    console.log(data);\n    elements.container.insertAdjacentHTML(\n      'beforeend',\n      createMarkup(data.results)\n    );\n    // Call observer\n    if (data.page < data.total_pages) {\n      observer.observe(elements.guard);\n    }\n  })\n  .catch(err => {\n    console.log(err);\n  });\n\n// Callback function for Intersection Observer\nfunction handlerLoadMore(entries, observer) {\n  entries.forEach(entry => {\n    console.log(entry);\n    if (entry.isIntersecting) {\n      page += 1;\n      serviceFilms(page)\n        .then(data => {\n          elements.container.insertAdjacentHTML(\n            'beforeend',\n            createMarkup(data.results)\n          );\n          if (data.page >= data.total_pages) {\n            observer.unobserve(elements.guard);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  });\n}\n"],"names":["$3ee26bbf77f100b9$var$elements","container","document","querySelector","guard","$3ee26bbf77f100b9$var$defaults","$3ee26bbf77f100b9$var$page","$3ee26bbf77f100b9$var$observer","IntersectionObserver","entries","observer1","forEach","entry","console","log","isIntersecting","$3ee26bbf77f100b9$var$serviceFilms","then","data","insertAdjacentHTML","$3ee26bbf77f100b9$var$createMarkup","results","page","total_pages","unobserve","catch","err","root","rootMargin","threshold","arr","map","poster_path","original_title","release_date","vote_average","join","currentPage","params","URLSearchParams","api_key","fetch","resp","ok","Error","json","observe"],"version":3,"file":"infinityscroll.d7a9ebe7.js.map"}